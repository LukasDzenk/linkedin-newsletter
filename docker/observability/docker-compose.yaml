services:
    grafana:
        image: grafana/grafana:latest
        container_name: grafana
        ports:
            - 3000:3000
        expose:
            - 3000
        restart: unless-stopped
        environment:
            - GF_SECURITY_ADMIN_USER=admin
            - GF_SECURITY_ADMIN_PASSWORD=dsjklKSLJ*$@!$!nmsdaA
            - GF_USERS_ALLOW_SIGN_UP=false
        volumes:
            - grafana_data:/var/lib/grafana
        networks:
            - monitoring-1

    prometheus:
        image: prom/prometheus:latest
        container_name: prometheus
        volumes:
            - ./prometheus.yml:/etc/prometheus/prometheus.yml
            - prometheus_data:/prometheus
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--web.console.libraries=/etc/prometheus/console_libraries'
            - '--web.console.templates=/etc/prometheus/consoles'
            - '--web.enable-lifecycle'
        # ports:
        #   - 9090:9090
        expose:
            - 9090
        restart: unless-stopped
        networks:
            - monitoring-1

    node_exporter:
        image: quay.io/prometheus/node-exporter:latest
        container_name: node_exporter
        command:
            - '--path.rootfs=/host'
        pid: host
        # ports:
        #   - 9100:9100
        expose:
            - 9100
        restart: unless-stopped
        volumes:
            - '/:/host:ro,rslave'
        networks:
            - monitoring-1

    # Postgresql exporter (not tested)
    # postgresql_exporter:
    #   image: wrouesnel/postgres_exporter:latest
    #   container_name: postgresql_exporter
    #   command:
    #     - '--extend.query-path=/etc/postgres_exporter/queries.yaml'
    #   restart: unless-stopped
    #   volumes:
    #     - ./queries.yaml:/etc/postgres_exporter/queries.yaml
    #   networks:
    #     - monitoring-1

    loki:
        image: grafana/loki:latest
        container_name: loki
        # ports:
        #   - 3100:3100
        expose:
            - 3100
        command: -config.file=/etc/loki/local-config.yaml
        volumes:
            - loki_data:/loki
        networks:
            - monitoring-1

    promtail:
        image: grafana/promtail:latest
        container_name: promtail
        volumes:
            - /var/log:/var/log
            - ./promtail-config.yml:/etc/promtail/config.yml
            # This fixes error: "Cannot connect to the Docker daemon at unix:///var/run/docker.sock"
            - /var/run/docker.sock:/var/run/docker.sock
        command: -config.file=/etc/promtail/config.yml
        networks:
            - monitoring-1

volumes:
    prometheus_data:
    grafana_data:
    loki_data:

networks:
    monitoring-1:
        driver: bridge
